{$R-}{$Q-}{$I+}{$S-}{$E-}{$N-}{$G+}{$A+}
program Kurtan;
{***********************Assembler Routine*******************************}
var key,key1:char;
procedure Keyp;assembler;{=if keyPressed then readKey}
label keyNotPressed;
asm
  mov ah,$01
  int 16h
  jz keyNotPressed
    mov ah,$00
    int 16h
    mov key,Al
    mov key1,Ah
keyNotPressed:
end;
procedure Rkey;assembler;
asm
  mov ah,$00
  int 16h
  mov key,Al
  mov key1,Ah
end;
var PrevMode:word;
procedure init13h;assembler;
asm
{save mode}
 mov ah,0Fh
 int 10h
 mov [PrevMode], ax

{init 13h}
 mov ax,0013h
 int 10h
end;
procedure RestoreMode;assembler;
asm
 mov ax, prevMode
 xor ah,ah
 int 10h
end;
{Procedure SetPal(Nr,R,G,B:byte); assembler;
asm
 mov dx,3c8h
 mov al,nr
 out dx,al
 inc dx
 mov al,r
 out dx,al
 mov al,g
 out dx,al
 mov al,b
 out dx,al
end;}
procedure DrawHelp;assembler;
const c:array[1..24,1..42] of byte=
((7,7,0,7,0,0,0,7,7,0,0,7,7,0,7,7,0,7,7,7,0,7,0,0,7,7,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,8,8,7,8,0,0,7,8,7,0,7,8,8,7,8,8,0,7,8,7,8,7,0,7,8,7,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0),
 (7,7,0,7,8,7,0,7,7,7,8,7,7,0,7,7,0,0,7,8,7,8,7,8,7,7,7,8,7,8,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,8,8,7,8,0,8,7,7,8,8,7,8,8,0,7,8,0,7,8,7,7,7,8,7,7,8,8,7,8,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,8,0,7,8,0,0,7,8,7,0,7,7,0,7,7,8,0,7,8,7,8,7,8,7,8,7,0,7,8,0,0,0,0,0,0,0,0,0,0,0,0),
 (0,8,0,0,8,0,0,0,8,0,8,0,8,8,0,8,8,0,0,8,0,8,0,8,0,8,0,8,0,8,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,7,0,7,0,0,7,0,0,0,0,7,7,0,7,0,7,0,7,0,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,8,8,7,8,7,8,7,0,0,0,7,8,8,7,8,7,8,7,8,0,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,7,0,7,8,7,8,7,8,7,0,7,7,0,0,7,8,8,7,8,0,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,8,8,7,8,7,8,7,8,0,8,7,8,8,7,8,7,0,7,8,0,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,8,0,7,8,0,7,0,8,0,0,7,7,0,7,8,7,8,7,8,0,7,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
 (0,8,0,0,8,0,0,8,0,0,0,0,8,8,0,8,0,8,0,8,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,7,0,0,7,0,7,0,7,7,0,7,7,0,0,0,7,0,0,0,7,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,8,7,0,7,7,8,8,7,8,8,7,8,7,0,7,8,7,0,7,8,8,7,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,7,0,8,7,8,8,0,7,7,0,7,7,8,8,7,8,7,8,7,8,0,7,7,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,8,7,0,7,7,0,0,0,7,8,7,8,8,0,7,7,7,8,7,8,0,7,8,8,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
 (7,7,0,8,7,8,7,0,7,7,8,7,8,0,0,7,8,7,8,0,7,0,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
 (0,8,8,0,0,8,0,8,0,8,8,0,8,0,0,0,8,0,8,0,0,8,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
 (0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,0,0,7,0,0,0,7,0,7,0,7,0,0,7,0,7,0,7,7,0,0),
 (0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,7,0,7,8,7,0,7,8,8,7,7,8,8,0,7,8,7,8,7,8,7,0),
 (0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,8,7,8,7,8,7,8,0,7,8,8,0,0,7,8,7,8,7,7,0,8),
 (0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,8,7,0,7,7,7,8,7,8,0,7,7,0,0,0,7,8,7,8,7,8,8,0),
 (0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,0,8,7,8,7,8,0,7,0,7,0,7,0,0,7,7,7,8,7,8,0,0),
 (0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,8,0,8,0,0,8,0,8,0,8,0,0,8,8,8,0,8,0,0));
label m1,m2;
asm
 push $a000
 pop es
 mov di,251
 mov si,0
 mov bl,24
 mov ch,0
 M1:
   mov cl,21
   M2:
     mov ax, word ptr c[si]
     mov es:[di],ax
     add si,2
     add di,2
   loop M2
 add di,278
 dec bl
 jnz m1
end;
procedure DrawKurtanMap(x,y:byte);assembler;
const c:array[1..62,1..50] of byte=
(               { }             { }             { }             { }             { }
(0,0,0,0,7,0,0,0,0,0,0,7,7,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,7,0,0,0,0,0,0,7,7,7,0,0,0,0,0,7,7,7,0,0,0,0),
(0,0,0,7,8,7,0,0,0,0,0,7,8,7,0,0,0,0,0,0,7,8,7,0,0,0,0,7,8,7,0,0,0,0,0,7,8,8,8,0,0,0,0,7,8,8,8,0,0,0),
(0,0,0,7,8,7,8,0,0,0,0,7,7,8,8,0,0,0,0,0,7,8,0,8,0,0,0,7,8,7,8,0,0,0,0,7,7,0,0,0,0,0,0,7,7,0,0,0,0,0),
(0,0,0,7,7,7,8,0,0,0,0,7,8,7,0,0,0,0,0,0,7,8,7,0,0,0,0,7,8,7,8,0,0,0,0,7,8,8,0,0,0,0,0,7,8,8,0,0,0,0),
(0,0,0,7,8,7,8,0,0,0,0,7,7,8,8,0,0,0,0,0,0,7,8,8,0,0,0,7,7,8,8,0,0,0,0,7,7,7,0,0,0,0,0,7,8,0,0,0,0,0),
(0,0,0,0,8,0,8,0,0,0,0,0,8,8,0,0,0,0,0,0,0,0,8,0,0,0,0,0,8,8,0,0,0,0,0,0,8,8,8,0,0,0,0,0,8,0,0,0,0,0),
(3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3,0),
(2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,8),
(2,0,0,0,7,0,0,0,0,0,0,7,7,7,0,0,0,0,0,7,0,7,7,7,0,0,7,0,7,7,7,0,0,0,7,7,0,7,7,0,0,0,7,7,0,7,0,0,2,8),
(2,0,0,0,7,0,0,0,0,0,0,0,0,7,0,0,0,0,0,7,0,0,0,7,0,0,7,0,7,0,7,0,0,0,0,7,0,7,0,0,0,0,0,7,0,7,0,0,2,8),
(2,0,0,0,7,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,7,7,0,0,7,0,0,7,7,0,0,0,7,7,0,7,7,0,0,0,7,7,0,7,0,0,2,8),
(2,0,0,0,7,0,0,0,0,0,0,0,7,0,0,0,0,0,0,7,0,0,0,7,0,0,7,0,0,0,7,0,0,0,7,0,0,0,7,0,0,0,0,7,0,7,0,0,2,8),
(2,0,0,0,7,0,0,0,0,0,0,0,7,0,0,0,2,0,0,7,0,7,7,7,0,0,7,0,7,7,0,0,0,0,7,7,0,7,7,0,2,0,7,7,0,7,0,0,2,8),
(2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,2,8),
(3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,0,3,0,2,2,2,2,2,2,3,0,0,0,0,0,0,0,3,2,2,2,2,2,2,0,3,0,0,0,0,0,0,0,3,8),
(2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,8),
(2,0,0,7,7,7,0,0,2,0,0,0,7,0,0,0,0,0,0,7,0,7,0,7,0,7,7,0,0,7,0,0,0,0,7,7,0,0,7,0,0,0,7,7,0,7,7,0,2,8),
(2,0,0,0,0,7,0,0,2,0,0,7,0,7,0,0,0,0,0,7,0,7,0,7,0,0,7,0,7,0,7,0,0,0,0,7,0,7,0,0,0,0,0,7,0,0,7,0,2,8),
(2,0,0,7,7,7,0,0,2,0,0,0,7,0,0,0,0,0,0,7,0,7,7,7,0,7,7,0,7,0,7,0,0,0,7,7,0,7,7,0,0,0,7,7,0,7,7,0,2,8),
(2,0,0,7,0,0,0,0,2,0,0,7,0,7,0,0,0,0,0,7,0,0,0,7,0,7,0,0,7,0,7,0,0,0,7,0,0,7,0,7,0,0,0,7,0,7,0,0,2,8),
(2,0,0,7,7,7,0,0,2,0,0,0,7,0,0,0,0,0,0,7,0,0,0,7,0,7,7,0,0,7,0,0,0,0,7,7,0,0,7,0,0,0,7,7,0,7,7,0,2,8),
(2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,8),
(3,0,0,0,0,0,0,0,3,2,2,2,2,2,2,2,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3,8),
(2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,8),
(2,0,0,7,7,7,0,0,2,0,0,0,7,0,0,0,0,0,0,7,0,7,7,7,0,0,7,7,0,7,0,0,0,0,7,7,0,7,7,7,0,0,7,7,0,7,7,0,2,8),
(2,0,0,0,0,7,0,0,2,0,0,7,0,7,0,0,0,0,0,7,0,7,0,0,0,0,0,7,0,7,0,0,0,0,0,7,0,0,0,7,0,0,0,7,0,0,7,0,2,8),
(2,0,0,0,7,7,0,0,2,0,0,0,7,7,0,0,0,0,0,7,0,7,7,7,0,0,7,7,0,7,0,0,0,0,7,7,0,0,7,0,0,0,7,7,0,7,7,0,2,8),
(2,0,0,0,0,7,0,0,2,0,0,0,0,7,0,0,0,0,0,7,0,0,0,7,0,0,7,0,0,7,0,0,0,0,7,0,0,0,7,0,0,0,0,7,0,0,7,0,2,8),
(2,0,0,7,7,7,0,0,2,0,0,0,7,0,0,0,0,0,0,7,0,7,7,7,0,0,7,7,0,7,0,0,0,0,7,7,0,0,7,0,0,0,7,7,0,7,7,0,2,8),
(2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,8),
(3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,2,2,2,2,2,2,3,2,2,2,2,2,0,0,3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3,8),
(2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,8),
(2,0,0,7,0,7,0,0,2,0,7,0,0,7,0,0,2,0,0,7,0,0,7,0,0,0,7,7,0,7,7,2,0,2,7,7,0,0,7,0,0,7,7,0,7,0,7,0,2,8),
(2,0,0,7,0,7,0,0,2,0,7,0,7,0,7,0,2,0,0,7,0,7,0,0,0,0,0,7,0,0,7,2,0,2,0,7,0,7,0,7,0,0,7,0,7,0,7,0,2,8),
(2,0,0,7,7,7,0,0,2,0,7,0,7,0,7,0,2,0,0,7,0,7,7,0,0,0,7,7,0,7,7,2,0,2,7,7,0,0,7,0,0,7,7,0,7,7,7,0,2,8),
(2,0,0,0,0,7,0,0,2,0,7,0,7,0,7,0,2,0,0,7,0,7,0,7,0,0,7,0,0,7,0,2,0,2,7,0,0,7,0,7,0,0,7,0,0,0,7,0,2,8),
(2,0,0,0,0,7,0,0,2,0,7,0,0,7,0,0,2,0,0,7,0,0,7,0,0,0,7,7,0,7,7,2,0,2,7,7,0,0,7,0,0,7,7,0,0,0,7,0,2,8),
(2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,8),
(2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,8),
(2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,8),
(2,0,0,7,7,7,0,0,0,0,0,7,0,7,0,0,2,0,0,7,0,7,7,7,0,0,7,7,0,7,7,2,0,2,7,7,0,0,7,0,2,0,7,7,0,7,7,0,2,8),
(2,0,0,7,0,0,0,0,0,0,0,7,0,7,0,0,2,0,0,7,0,0,0,7,0,0,0,7,0,0,7,2,0,2,0,7,0,7,0,7,2,0,0,7,0,7,0,0,2,8),
(2,0,0,7,7,0,0,0,0,0,0,7,0,7,0,0,2,0,0,7,0,0,7,0,0,0,7,7,0,7,7,2,0,2,7,7,0,0,7,7,2,0,7,7,0,7,7,0,2,8),
(2,0,0,0,0,7,0,0,0,0,0,7,0,7,0,0,2,0,0,7,0,0,7,0,0,0,7,0,0,0,7,2,0,2,7,0,0,0,0,7,2,0,0,7,0,0,7,0,2,8),
(2,0,0,7,7,0,0,0,0,0,0,7,0,7,0,0,2,0,0,7,0,0,7,0,0,0,7,7,0,7,7,2,0,2,7,7,0,0,7,0,2,0,7,7,0,7,7,0,2,8),
(2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,8),
(3,0,0,0,0,0,0,0,3,2,2,2,2,2,2,2,3,0,0,0,0,0,0,0,3,0,2,2,2,2,2,2,0,2,0,0,0,0,0,0,3,0,0,0,0,0,0,0,3,8),
(2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,8),
(2,0,0,0,7,0,0,0,0,0,0,7,0,7,7,0,0,0,7,0,0,7,0,0,2,0,7,7,0,7,0,7,2,7,7,0,0,7,0,0,2,0,7,7,0,0,7,0,2,8),
(2,0,0,7,0,0,0,0,0,0,0,7,0,0,7,0,0,0,7,0,7,0,7,0,2,0,0,7,0,7,0,7,0,0,7,0,7,0,7,0,2,0,0,7,0,7,0,0,2,8),
(2,0,0,7,7,0,0,0,0,0,0,7,0,7,7,0,0,0,7,0,0,7,0,0,2,0,7,7,0,7,7,7,0,7,7,0,7,0,7,0,2,0,7,7,0,7,7,0,2,8),
(2,0,0,7,0,7,0,0,0,0,0,7,0,7,0,0,0,0,7,0,7,0,7,0,2,0,7,0,0,0,0,7,0,0,7,0,7,0,7,0,2,0,0,7,0,7,0,7,2,8),
(2,0,0,0,7,0,0,0,0,0,0,7,0,7,7,0,0,0,7,0,0,7,0,0,2,0,7,7,0,0,0,7,0,7,7,0,0,7,0,0,2,0,7,7,0,0,7,0,2,8),
(2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,2,8),
(3,2,2,2,2,2,2,3,2,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3,8),
(0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8),
(7,7,0,7,7,0,0,7,7,0,7,7,0,7,7,0,0,0,7,7,7,0,0,0,0,0,0,7,0,7,0,0,0,7,0,0,7,7,0,0,0,7,0,0,0,7,0,0,0,0),
(7,8,7,7,8,7,0,7,8,8,7,8,8,7,8,8,0,7,8,8,8,8,0,0,0,0,7,8,7,8,7,0,7,8,7,0,7,8,7,0,0,7,7,0,0,7,8,0,0,0),
(7,7,8,7,7,8,8,7,7,0,7,7,0,7,7,0,0,7,8,7,7,0,7,7,7,0,7,8,7,8,7,8,7,8,7,8,7,7,8,8,0,7,8,7,0,7,8,0,0,0),
(7,8,0,7,7,8,0,7,8,8,0,7,8,0,7,8,0,7,8,8,7,8,0,8,8,8,7,8,7,8,7,8,7,7,7,8,7,8,8,0,0,7,8,0,7,7,8,0,0,0),
(7,8,0,7,8,7,0,7,7,0,7,7,8,7,7,8,0,0,7,7,7,8,0,0,0,0,7,8,7,8,7,8,7,8,7,8,7,8,0,0,0,7,8,0,0,7,8,0,0,0),
(0,8,0,0,8,0,8,0,8,8,0,8,8,0,8,8,0,0,0,8,8,8,0,0,0,0,0,8,0,8,0,8,0,8,0,8,0,8,0,0,0,0,8,0,0,0,8,0,0,0)
);
label m1,m2,exit1,m3,m4,m5;
asm
 push $a000
 pop es
 mov di,11131
 mov si,0
 mov bl,62
 mov ch,0
 M1:
   mov cl,25
   M2:
     mov ax, word ptr c[si]
     mov es:[di],ax
     add si,2
     add di,2
   loop M2
 add di,270
 dec bl
 jnz m1

 cmp x,255      {draw current position}
 jz exit1
   mov ah,0
   mov cx,2560
   mov al,y
   mul cx
   mov di,13691
   add di,ax
   mov cx,8
   mov ah,0
   mov al,x
   mul cx
   add di,ax

   mov bl,8
   mov ch,0
   m3:
     mov cl,8
     m4:
       mov al,es:[di]
       cmp al,7
       jnz m5
         mov al,4
         mov es:[di],al
       m5:
       inc di
     loop m4
     add di,312
   dec bl
   jnz m3
 exit1:
end;
procedure DrawDemoPrompt;assembler;
const c:array[1..6,1..26] of byte=
((7,7,0,7,7,0,0,0,7,7,0,0,7,7,0,0,7,0,7,0,0,0,7,0,0,0),
 (7,8,8,7,8,8,0,0,7,8,7,0,7,8,8,7,8,7,8,7,0,7,8,7,0,0),
 (7,7,0,7,7,0,7,0,7,8,7,8,7,7,0,7,8,7,8,7,8,7,8,7,8,0),
 (7,8,8,0,7,8,0,8,7,8,7,8,7,8,8,7,8,7,8,7,8,7,8,7,8,0),
 (7,8,0,7,7,8,0,0,7,7,0,8,7,7,0,7,8,7,8,7,8,0,7,0,8,0),
 (0,8,0,0,8,8,0,0,0,8,8,0,0,8,8,0,8,0,8,0,8,0,0,8,0,0));
label m1,m2;
asm
 push $a000
 pop es
 mov di,7931
 mov si,0
 mov ch,0
 mov bl,6
 M1:
   mov cl,13
   M2:
     mov ax, word ptr c[si]
     mov es:[di],ax
     add si,2
     add di,2
   loop M2
 add di,294
 dec bl
 jnz m1
end;
procedure ClearDemoPrompt;assembler;
label m1,m2;
asm
 push $a000
 pop es
 mov di,7931
 mov ax,0
 mov bl,6
 mov ch,0
 M1:
   mov cl,13
   M2:
     mov es:[di],ax
     add di,2
   loop M2
 add di,294
 dec bl
 jnz m1
end;
procedure DrawDemoOptions;assembler;
const c:array[1..12,1..30] of byte=
(
 (9,9,0,9,9,0,9,9,0,0,0,9,9,0,9,9,9,0,9,0,0,9,9,0,0,0,0,0,0,0),
 (9,1,1,9,1,1,9,1,1,0,0,9,1,1,0,9,1,9,1,9,0,9,1,9,0,0,0,0,0,0),
 (9,9,0,9,9,0,9,1,0,9,0,9,9,0,0,9,1,9,1,9,1,9,9,1,1,0,0,0,0,0),
 (9,1,1,0,9,1,9,1,0,0,1,0,9,1,0,9,1,9,1,9,1,9,1,1,0,0,0,0,0,0),
 (9,9,0,9,9,1,9,9,0,0,0,9,9,1,0,9,1,0,9,1,1,9,1,0,0,0,0,0,0,0),
 (0,1,1,0,1,1,0,1,1,0,0,0,1,1,0,0,1,0,0,1,0,0,1,0,0,0,0,0,0,0),
 (0,0,0,0,0,0,0,9,0,0,0,0,0,9,9,0,9,9,0,0,9,9,0,9,9,0,9,9,0,0),
 (0,9,0,0,0,0,9,1,1,0,0,0,0,9,1,1,9,1,9,0,9,1,1,9,1,1,9,1,9,0),
 (9,9,9,0,0,9,1,9,9,9,0,9,0,9,9,0,9,9,1,1,9,9,0,9,9,0,9,1,9,1),
 (0,9,1,1,9,1,1,0,1,1,1,0,1,0,9,1,9,1,1,0,9,1,1,9,1,1,9,1,9,1),
 (0,0,1,9,1,1,0,0,0,0,0,0,0,9,9,1,9,1,0,0,9,9,0,9,9,0,9,9,1,1),
 (0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,1,1,0,1,1,0,1,1,0)
);
label m1,m2;
asm
 push $a000
 pop es
 mov di,31931
 mov si,0
 mov bl,12
 mov ch,0
 M1:
   mov cl,15
   M2:
     mov ax, word ptr c[si]
     mov es:[di],ax
     add si,2
     add di,2
   loop M2
 add di,290
 dec bl
 jnz m1
end;
procedure ClearDemoOptions;assembler;
label m1,m2;
asm
 push $a000
 pop es
 mov di,31931
 mov ax,0
 mov ch,0
 mov bl,12
 M1:
   mov cl,15
   M2:
     mov es:[di],ax
     add di,2
   loop M2
 add di,290
 dec bl
 jnz m1
end;
procedure DrawBlock(x,y,z:byte);assembler;
const c:array[0..9,0..9,0..9] of byte=
(
 ((0,0,0,0,0,0,0,0,0,0),{empty}
  (0,0,0,0,0,0,0,0,0,0),
  (0,0,0,0,0,0,0,0,0,0),
  (0,0,0,0,0,0,0,0,0,0),
  (0,0,0,0,0,0,0,0,0,0),
  (0,0,0,0,0,0,0,0,0,0),
  (0,0,0,0,0,0,0,0,0,0),
  (0,0,0,0,0,0,0,0,0,0),
  (0,0,0,0,0,0,0,0,0,0),
  (0,0,0,0,0,0,0,0,0,0)),

 ((6,6,6,6,6,6,6,6,6,6),
  (6,6,6,6,6,6,6,6,6,6),
  (6,6,6,6,6,6,6,6,6,6),
  (6,6,6,6,6,6,6,6,6,6),
  (6,6,6,6,6,6,6,6,6,6),
  (6,6,6,6,6,6,6,6,6,6),
  (6,6,6,6,6,6,6,6,6,6),
  (6,6,6,6,6,6,6,6,6,6),
  (6,6,6,6,6,6,6,6,6,6),
  (6,6,6,6,6,6,6,6,6,6)),{wall}

 ((0,0,0,0,0,0,0,0,0,0),{place}
  (0,0,1,0,0,0,0,0,0,0),
  (0,0,0,0,0,1,1,0,1,0),
  (0,0,1,0,9,0,0,0,0,0),
  (0,0,1,0,9,9,9,0,0,0),
  (0,0,0,9,9,9,0,1,0,0),
  (0,0,0,0,0,9,0,1,0,0),
  (0,1,0,1,1,0,0,0,0,0),
  (0,0,0,0,0,0,0,1,0,0),
  (0,0,0,0,0,0,0,0,0,0)),

 (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),{crate}
  ( 0, 0, 0,10,10,10,10, 0, 0, 0),
  ( 0, 0,10, 0, 0, 0, 0,10, 0, 0),
  ( 0,10, 0, 2, 2, 2, 2, 0,10, 0),
  ( 0,10, 0, 2, 0, 0, 2, 0,10, 0),
  ( 0,10, 0, 2, 0, 0, 2, 0,10, 0),
  ( 0,10, 0, 2, 2, 2, 2, 0,10, 0),
  ( 0,10, 2, 0, 0, 0, 0, 2,10, 0),
  ( 0,10,10,10,10,10,10,10,10, 0),
  ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)),

 (( 0, 8, 8, 8, 8, 8, 8, 8, 8, 0),{crate set}
  ( 8, 8, 8,15,15,15,15, 8, 8, 8),
  ( 8, 8,15, 8, 8, 8, 8,15, 8, 8),
  ( 8,15, 8, 7, 7, 7, 7, 8,15, 8),
  ( 8,15, 8, 7, 8, 8, 7, 8,15, 8),
  ( 8,15, 8, 7, 8, 8, 7, 8,15, 8),
  ( 8,15, 8, 7, 7, 7, 7, 8,15, 8),
  ( 8,15, 7, 8, 8, 8, 8, 7,15, 8),
  ( 8,15,15,15,15,15,15,15,15, 8),
  ( 0, 8, 8, 8, 8, 8, 8, 8, 8, 0)),

 (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),{crate $}
  ( 0, 0, 0,10,10,10,10, 0, 0, 0),
  ( 0, 0,10, 0, 0, 0, 0,10, 0, 0),
  ( 0,10, 0, 2, 2, 2, 2, 0,10, 0),
  ( 0,10, 0, 2,14,14, 2, 0,10, 0),
  ( 0,10, 0, 2,14,14, 2, 0,10, 0),
  ( 0,10, 0, 2, 2, 2, 2, 0,10, 0),
  ( 0,10, 2, 0, 0, 0, 0, 2,10, 0),
  ( 0,10,10,10,10,10,10,10,10, 0),
  ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)),

 (( 0, 8, 8, 8, 8, 8, 8, 8, 8, 0),{crate $ set}
  ( 8, 8, 8,14,14,14,14, 8, 8, 8),
  ( 8, 8,14, 8, 8, 8, 8,14, 8, 8),
  ( 8,14, 8, 6, 6, 6, 6, 8,14, 8),
  ( 8,14, 8, 6, 8, 8, 6, 8,14, 8),
  ( 8,14, 8, 6, 8, 8, 6, 8,14, 8),
  ( 8,14, 8, 6, 6, 6, 6, 8,14, 8),
  ( 8,14, 6, 8, 8, 8, 8, 6,14, 8),
  ( 8,14,14,14,14,14,14,14,14, 8),
  ( 0, 8, 8, 8, 8, 8, 8, 8, 8, 0)),

 (( 0, 7, 0, 0, 7, 0, 0, 7, 0, 0),
  ( 0, 7, 0, 0, 7, 0, 0, 7, 0, 0),
  ( 7, 7, 7, 7, 7, 7, 7, 7, 7, 7),
  ( 0, 7, 0, 0, 7, 0, 0, 7, 0, 0),
  ( 0, 7, 0, 0, 7, 0, 0, 7, 0, 0),
  ( 0, 7, 0, 0, 7, 0, 0, 7, 0, 0),
  ( 0, 7, 0, 0, 7, 0, 0, 7, 0, 0),
  ( 7, 7, 7, 7, 7, 7, 7, 7, 7, 7),
  ( 0, 7, 0, 0, 7, 0, 0, 7, 0, 0),
  ( 0, 7, 0, 0, 7, 0, 0, 7, 0, 0)),

 (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  ( 0, 0, 0,13,13,13, 0, 0, 0, 0),
  ( 0, 0,13, 5, 5, 5,13, 0, 0, 0),
  ( 0, 0, 0, 5, 0, 0,13, 5, 0, 0),
  ( 0, 0, 0, 0, 0,13, 5, 5, 0, 0),
  ( 0, 0, 0, 0,13, 5, 5, 0, 0, 0),
  ( 0, 0, 0, 0,13, 5, 0, 0, 0, 0),
  ( 0, 0, 0, 0, 0, 5, 0, 0, 0, 0),
  ( 0, 0, 0, 0,13, 0, 0, 0, 0, 0),
  ( 0, 0, 0, 0, 0, 5, 0, 0, 0, 0)),

 (( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  ( 0, 0, 3, 3, 3, 3, 3, 3, 0, 0),
  ( 0, 3, 0, 0, 0, 0, 0, 0, 3, 0),
  ( 0, 3, 7, 7, 3, 3, 7, 7, 3, 0),
  ( 0, 3, 0, 0, 3, 3, 0, 0, 3, 0),
  ( 0, 3, 4, 0, 0, 0, 0, 4, 3, 0),
  ( 0, 3, 0, 4, 4, 4, 4, 0, 3, 0),
  ( 0, 3, 0, 0, 0, 0, 0, 0, 3, 0),
  ( 0, 0, 3, 3, 3, 3, 3, 3, 0, 0),
  ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))

{(( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
  ( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0))}

);
label m1,m2;
asm
 push $a000
 pop es

 mov cx,10
 mov ah,0
 mov al,x
 mul cx
 mov di,ax

 mov cx,3200
 mov ah,0
 mov al,y
 mul cx
 add di,ax

 mov cx,100
 mov ah,0
 mov al,z
 mul cx
 mov si,ax

 mov ch,0
 mov bl,10
 M1:
   mov cl,5
   M2:
     mov ax,word ptr c[si]
     mov es:[di],ax

     add di,2
     add si,2
   loop m2
   add di,310
 dec bl
 jnz M1

end;
{**********************************************************************}

const MaxMaps=36;
      MaxUndo=2000;{*4=8000 moves}
{      MaxOldDemoSize=500;{*4=2000 moves}
      MaxDemoSize=530;{*4=2120 moves}

type mapArray=array[0..24,0..15] of byte;
Type xy=record
 x:byte;
 y:byte;
end;
type MapData1=record
 neighbour:array[1..4] of byte;
 DefaultStart:XY;
 M:MapArray;

 nDemo:integer;
 demo:array[0..MaxDemoSize] of byte;
end;
{type OldMapData1=record
 neighbour:array[1..4] of byte;
 DefaultStart:XY;
 M:MapArray;

 nDemo:integer;
 demo:array[0..MaxOldDemoSize] of byte;
end;}

type Player=object
 x,y,startX,starty:byte;
 currentMap:byte;
 rec:boolean;

 moves:array[0..MaxUndo] of byte;
 Nmov:integer;

 procedure control;
 procedure startNewMap(setToDefault:boolean);
 procedure moveMe(dx,dy:shortint);
end;

type AllMaps=array[1..MaxMaps] of MapData1;
{type AllOldMaps=array[1..MaxMaps] of OldMapData1;}

var map,StartMap:^allMaps;
{    OldMapi:AllOldMaps;}
    tempMap:mapArray;
 {   f2:file of allOldMaps;}
    f1:file of allMaps;
    R:MapArray;
    m:player;

    str2:string[2];

    i,j,k:word;

    {shiffr}
    base,shift:byte;
    adress:word;

    DefaultStart:boolean;

{------------------------------------------------------------------------}
procedure LoadStartMap;
begin
 writeln(f1);
 sleep(10000);
 reset(f1);
 read(f1,StartMap^);
 close(f1);
 map^:=StartMap^;
end;
{------------------------------------------------------------------------}
procedure saveStartMap;
begin
 rewrite(f1);
 write(f1,StartMap^);
 close(f1);
end;
{-----------------------------------------------------------------------}
{procedure LoadMaps;
const map1:array[1..MaxMaps,0..15,0..24] of byte=
(
 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,0,0,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,3,0,3,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,0,1,0,1,1,3,0,1,1,1,1,1,0,0,0,1,1,1,1,1),
  (1,1,1,1,0,0,3,0,1,0,0,1,0,0,0,1,1,0,3,0,1,1,1,1,1),
  (1,1,1,1,0,3,3,3,1,1,0,1,0,3,3,0,0,0,3,0,0,0,1,1,1),
  (1,1,1,1,0,0,0,0,1,0,0,1,0,0,0,1,1,1,0,1,1,0,0,0,0),
  (1,1,1,1,3,1,1,1,1,1,0,1,1,1,0,0,0,1,0,1,1,0,1,1,1),
  (1,1,1,1,2,2,2,2,1,0,0,3,0,0,0,0,0,1,0,1,1,1,1,1,1),
  (1,1,1,1,2,2,2,2,1,0,3,0,1,1,0,1,1,1,0,0,0,1,1,1,1),
  (1,1,1,0,2,2,2,2,3,0,0,0,1,0,3,0,0,0,3,3,0,1,1,1,1),
  (1,1,1,0,2,2,2,2,1,1,0,0,1,0,3,0,1,1,0,0,0,1,1,1,1),
  (1,1,1,1,2,2,2,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)),
 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,0,0,0,1,1,0,0),
  (1,1,0,0,0,0,1,0,0,3,3,0,1,1,1,1,1,1,0,1,0,0,0,0,1),
  (1,1,0,3,3,3,1,0,3,0,0,0,1,1,1,1,1,1,0,1,0,1,1,1,1),
  (1,1,0,0,3,0,1,3,0,3,0,3,1,1,1,0,0,1,0,1,0,0,0,0,1),
  (1,1,0,0,0,3,0,0,0,1,0,0,0,0,0,0,0,1,7,1,1,1,1,0,0),
  (1,1,0,3,1,1,1,0,0,1,0,1,1,1,1,1,0,1,0,8,1,1,1,1,1),
  (1,1,1,0,0,0,3,0,0,3,0,1,1,1,1,1,0,1,1,1,1,0,0,1,1),
  (1,1,1,0,1,1,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1),
  (1,1,0,0,3,0,1,1,0,3,0,0,1,0,1,1,0,1,1,1,1,0,0,1,1),
  (1,1,0,0,3,0,1,1,0,3,3,0,1,0,1,2,2,2,2,2,1,0,0,1,1),
  (1,1,0,0,0,0,0,0,3,5,0,3,1,0,0,2,2,2,2,2,1,0,0,0,1),
  (1,1,0,0,3,3,1,1,0,0,3,0,0,1,1,2,2,2,2,2,0,0,0,0,1),
  (1,1,1,0,0,0,1,1,0,0,0,0,0,1,1,2,2,2,2,2,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,2,2,2,2,2,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)),
 ((1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,2,2,2,2,2,0,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,2,2,2,2,2,0,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,0,0,0,0,0,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1),
  (1,1,1,0,3,3,0,3,0,1,0,0,0,3,3,0,7,0,5,2,1,1,1,1,1),
  (1,1,1,0,3,0,0,1,0,0,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1),
  (1,1,1,0,3,0,0,1,1,1,0,1,0,1,0,3,0,0,1,1,1,1,1,1,1),
  (1,1,1,1,3,1,1,0,0,0,3,0,0,1,0,0,0,0,0,0,0,0,0,0,0),
  (1,1,1,1,0,1,1,1,0,1,0,0,0,1,1,1,3,3,0,1,1,1,1,1,1),
  (1,1,1,1,0,3,0,0,1,1,0,1,1,0,3,0,0,0,0,1,1,1,1,1,1),
  (1,1,0,0,0,3,0,3,0,0,0,0,0,3,0,0,3,0,1,1,1,1,1,1,1),
  (1,1,0,3,0,0,0,1,1,0,1,1,0,1,1,0,0,1,1,1,1,1,1,1,1),
  (1,1,0,0,0,1,1,1,1,0,0,3,0,3,0,3,0,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1)),
 ((1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,7,0,0,1,1,1,1,1,1,1),
  (1,1,2,2,2,2,2,2,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1),
  (1,1,2,2,2,2,2,2,0,0,0,1,0,0,1,1,0,0,0,1,1,1,1,1,1),
  (1,1,2,2,1,1,1,0,3,0,0,0,0,5,0,0,0,0,0,1,1,1,1,1,1),
  (1,1,2,2,2,0,3,0,3,0,1,0,0,1,1,1,0,0,0,1,1,1,1,1,1),
  (1,1,2,2,2,1,3,1,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1),
  (1,1,1,1,0,0,0,0,1,0,0,0,1,3,0,0,1,0,3,1,1,1,1,1,1),
  (1,1,1,1,0,0,3,3,0,3,0,3,0,0,3,1,1,0,0,3,0,0,0,0,0),
  (1,1,1,1,0,0,3,0,0,0,1,3,1,0,0,1,1,0,0,0,0,1,1,1,1),
  (1,1,1,1,1,1,0,1,1,0,1,0,0,3,0,1,1,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,0,0,3,0,3,0,1,1,0,1,1,0,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,0,0,0,0,3,0,0,3,0,0,1,0,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,0,0,1,0,1,0,0,0,1,7,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,8,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1)),
 ((1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,1,1,1,0,0,0,3,0,0,3,0,0,0,1,1,1,1,1),
  (1,1,1,1,1,1,0,1,1,1,1,1,0,0,0,3,0,3,0,0,1,1,1,1,1),
  (1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,0,0,0,0,0,7,0,8,1,0,0,3,0,3,0,0,0,0,0,0,0,0),
  (1,1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,5,0,0,0,1,0,1,0,1),
  (1,1,1,0,0,0,0,0,0,0,0,0,3,0,1,1,0,1,1,1,1,0,1,0,1),
  (1,1,1,1,1,1,1,1,0,1,0,0,3,0,1,2,2,2,2,1,0,0,1,0,1),
  (1,1,1,1,1,1,1,1,0,1,0,1,0,0,1,2,2,2,2,1,0,1,1,0,1),
  (1,1,1,1,1,1,1,1,0,1,0,1,1,3,1,2,2,2,2,1,0,1,0,0,1),
  (1,1,1,1,1,1,1,1,0,1,0,3,0,0,1,0,0,0,1,1,0,1,0,1,1),
  (1,1,1,1,1,1,1,1,0,1,0,3,0,3,1,2,0,0,1,0,0,1,0,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,0,0,0,1,1,1,1,1,0,1,1,0,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,0,0,0,0,0,1,0,0,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1)),
 ((1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,0,1,1,1,1,1,0,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0),
  (1,1,1,1,1,1,1,0,0,1,1,1,0,3,1,0,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,0,0,0,0,0,0,1,1,1,1),
  (1,1,1,1,1,1,1,0,1,0,0,3,0,3,1,1,1,1,1,1,0,1,1,1,1),
  (1,1,1,1,1,1,1,0,1,0,0,0,3,0,1,0,2,2,2,1,0,1,1,1,1),
  (1,1,1,1,1,1,1,0,1,1,0,3,3,0,0,2,2,2,2,1,0,1,1,1,1),
  (1,1,1,1,1,1,1,0,0,1,3,0,0,0,1,2,2,2,2,1,0,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,0,3,0,3,1,2,2,2,2,1,0,0,0,0,0),
  (1,1,1,1,1,1,1,1,0,1,3,0,0,0,1,1,0,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,0,0,3,0,1,0,3,0,3,0,0,0,0,0,0),
  (1,1,1,1,1,1,1,1,0,1,1,1,0,1,1,0,0,5,0,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,0,0,1,3,0,0,0,0,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)),

 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,0,1,1,1,1,0,0,3,0,3,0,0,0,1,1,1,1,1,1,1,1,1,1),
  (1,1,0,1,2,0,0,1,0,3,0,0,3,3,0,1,1,1,1,1,1,1,1,1,1),
  (1,1,0,1,2,2,2,3,0,0,3,0,3,0,0,1,1,1,1,1,1,1,1,1,1),
  (1,1,0,1,2,2,1,1,0,0,3,3,0,3,0,0,1,1,1,1,1,1,1,1,1),
  (1,1,0,1,2,2,2,1,1,1,1,0,1,1,0,3,1,0,0,7,0,0,0,0,0),
  (0,0,0,1,0,2,2,2,1,0,0,0,0,1,0,0,0,3,0,1,1,1,1,1,1),
  (1,1,1,1,0,2,2,2,1,0,0,0,0,1,0,0,1,0,1,1,1,1,1,1,1),
  (1,1,1,1,0,2,2,1,1,1,0,1,1,1,1,1,1,0,0,1,1,1,1,1,1),
  (1,1,1,1,2,2,1,1,0,0,3,3,0,0,0,0,0,0,0,1,1,1,1,1,1),
  (1,1,1,1,2,1,1,0,3,0,3,0,0,3,0,1,1,1,1,1,0,0,0,0,0),
  (1,1,1,1,1,1,1,0,0,3,0,0,3,0,1,1,0,0,0,0,0,1,1,1,1),
  (1,1,1,1,1,1,1,0,0,0,1,1,1,1,8,1,0,1,0,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1)),
 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1),
  (0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1),
  (1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1),
  (1,0,0,0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1),
  (1,0,1,0,1,1,1,0,0,1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1),
  (0,0,1,7,1,0,3,0,3,3,0,3,0,1,0,0,0,1,0,1,0,0,0,0,0),
  (1,1,1,0,0,3,0,0,0,0,3,0,0,0,3,0,0,1,0,1,0,1,1,1,1),
  (1,1,1,0,0,0,0,3,0,0,3,1,0,1,0,3,0,1,0,1,0,1,1,1,1),
  (1,1,1,1,1,1,0,1,1,1,0,1,0,1,1,0,0,1,0,1,0,1,1,1,1),
  (1,1,1,1,0,0,3,0,0,1,0,0,0,0,1,1,1,1,0,1,0,1,1,1,1),
  (1,1,1,1,0,3,0,3,0,1,1,0,2,2,2,1,1,1,0,1,0,1,1,1,1),
  (1,1,1,1,0,0,3,0,0,0,1,1,2,2,2,2,1,1,0,1,0,1,1,1,1),
  (1,1,1,1,1,1,3,0,0,3,0,1,1,2,2,2,2,0,0,0,0,0,0,0,0),
  (1,1,1,1,1,1,0,0,3,0,0,1,1,1,2,2,2,1,1,1,0,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,0,1,1,1,2,2,2,0,0,0,0,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1)),
 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,2,1,0,0,0,0,0,0,1,1,1,1,0,1,1,1,1,1,1,1),
  (1,1,1,1,2,2,1,0,3,0,0,3,0,1,0,0,1,0,1,1,1,1,1,1,1),
  (1,1,1,2,2,2,1,0,1,1,0,3,0,1,0,0,1,0,1,1,1,1,1,1,1),
  (1,1,1,2,2,2,2,0,0,0,1,3,3,0,0,0,1,0,1,1,1,1,1,1,1),
  (1,1,1,1,2,2,2,0,3,0,0,0,0,1,3,0,1,0,1,1,1,1,1,1,1),
  (0,0,1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1),
  (1,0,1,0,0,0,3,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0),
  (1,0,1,0,0,3,0,1,0,0,0,1,0,3,0,1,1,1,1,1,1,1,1,1,1),
  (1,0,1,0,3,1,1,1,0,0,0,1,0,3,5,0,0,0,0,0,0,0,0,0,0),
  (1,0,1,0,0,0,0,1,0,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1),
  (1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0),
  (1,0,1,1,1,1,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,1),
  (1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1)),
 ((1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1),
  (1,0,1,1,1,1,1,0,1,1,1,1,1,1,2,2,2,1,1,1,0,0,0,0,1),
  (1,0,1,1,1,1,1,0,1,1,1,1,1,1,2,2,2,1,1,1,1,1,1,0,1),
  (1,0,1,1,1,1,1,0,1,1,1,1,1,2,2,2,2,0,0,0,0,0,1,0,0),
  (1,0,1,1,1,1,1,0,1,1,2,2,2,2,2,2,1,1,1,1,1,0,1,1,1),
  (1,0,1,1,1,1,1,0,0,0,0,0,2,2,2,2,1,0,0,1,1,0,0,0,0),
  (1,0,1,1,1,1,1,0,3,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,0,0,1,0,0,1,3,1,0,5,0,3,0,1,0,1,1,1),
  (0,0,1,1,1,1,1,0,1,1,3,0,0,3,0,0,0,0,3,0,1,0,1,1,1),
  (1,1,1,1,0,0,3,3,3,0,0,0,1,0,1,0,0,1,0,0,1,0,0,0,0),
  (1,1,1,1,0,0,0,0,0,3,0,3,1,0,1,1,3,0,0,1,1,1,1,1,1),
  (1,1,1,1,1,0,0,1,3,0,3,0,1,0,0,3,0,0,3,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,0,0,3,0,3,0,1,3,0,0,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,0,0,1,0,0,1,1,0,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1)),
 ((1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,3,0,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,0,0,3,3,1,0,3,0,0,0,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,3,0,0,3,0,0,1,5,0,3,0,1,1,1,1,1,1,1),
  (0,0,0,1,1,1,1,0,3,0,0,0,0,1,0,3,3,0,1,1,1,1,1,1,1),
  (1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,0,3,0,1,1,1,1,1,1,1),
  (1,1,0,1,1,1,1,1,2,2,2,1,0,0,1,0,0,0,1,1,1,1,1,1,1),
  (1,1,0,1,1,1,1,1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,0,1,1,1,1,1,2,0,0,1,0,1,1,0,0,1,1,1,1,1,1,1,1),
  (1,1,0,1,1,1,1,1,2,1,0,1,2,1,1,1,0,0,0,0,0,0,0,0,0),
  (1,1,0,1,1,1,1,1,2,2,2,0,2,2,2,1,1,1,1,1,1,1,1,1,1),
  (1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1)),
 ((1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (0,0,0,1,1,1,1,1,1,1,1,7,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,0,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,1,0,5,0,0,0,3,0,0,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,1,0,0,0,1,3,1,0,0,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,1,1,0,0,2,2,2,3,0,1,1,1,1,1,1,1,1),
  (0,0,0,0,0,0,0,0,1,1,3,1,0,2,2,1,0,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,0,0,2,2,2,1,3,1,1,1,1,1,1,1,1),
  (0,0,0,0,0,0,0,0,0,0,0,1,1,0,1,0,0,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,0,3,0,0,0,3,0,0,0,0,0,0,7,0,0),
  (1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)),

 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,2,2,2,0,0,0,0,3,0,0,3,0,0,0,1,1,1,1,1,1),
  (1,1,1,1,1,1,2,0,0,0,0,1,0,3,0,0,3,0,0,1,1,1,1,1,1),
  (1,1,1,0,0,0,0,1,1,1,1,1,0,3,0,1,0,1,1,1,1,1,1,1,1),
  (1,1,1,0,1,1,1,1,0,0,0,1,1,3,0,3,0,1,1,1,1,1,1,1,1),
  (0,0,0,0,1,1,1,8,0,1,0,1,0,3,0,0,3,1,1,1,1,1,1,1,1),
  (1,1,1,0,1,1,1,1,1,1,0,1,0,3,1,3,0,0,0,0,0,0,7,0,1),
  (1,1,1,0,1,0,0,0,0,0,0,1,0,0,0,0,0,1,1,1,3,3,1,0,1),
  (1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,1,0,0),
  (1,1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1)),
 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,0,0,0,1,0,0,1,1,1,1,1,1,1,1,1,0,0),
  (1,1,1,1,1,1,1,0,3,0,0,1,0,3,0,0,0,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,3,1,1,1,3,1,0,0,0,1,1,1,1,1,1,0,1),
  (0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,3,1,1,3,1,0,0,0,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,0,0,0,3,0,1,1,3,0,0,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,0,3,0,3,0,0,0,0,3,0,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,0,0,3,0,3,0,0,1,1,0,0,0,0,1,1,1,1,0,0),
  (1,1,1,1,1,1,0,0,3,0,0,3,0,0,1,1,1,1,0,1,1,1,1,1,1),
  (0,0,1,1,1,1,1,1,1,1,1,1,3,3,0,3,0,3,0,0,0,0,0,0,0),
  (1,0,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,0,0,0,1,1,1,1),
  (1,0,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,0,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1)),
 ((1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,0,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,0,0,0,3,0,3,1,1,1,0,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,0,0,3,0,0,1,0,3,0,0,1,0,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,0,1,1,0,1,1,0,0,0,0,1,0,1,1,1,1,1,1),
  (1,0,1,1,1,1,0,0,1,1,0,0,1,1,1,0,0,1,0,0,0,0,0,0,0),
  (1,0,1,1,1,1,0,1,1,0,3,0,5,0,0,1,0,1,1,1,1,1,1,1,1),
  (1,0,1,1,1,1,0,0,1,3,0,3,0,3,0,0,3,0,0,0,0,0,0,0,0),
  (1,0,1,1,1,1,0,0,0,0,3,0,0,1,1,1,0,1,1,1,1,1,1,1,1),
  (0,0,1,1,1,1,0,3,1,1,0,3,1,0,0,0,0,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,0,1,0,0,1,2,2,2,2,0,1,1,1,1,1,1,1),
  (0,0,0,0,0,0,0,0,0,0,1,0,1,2,2,2,2,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,3,0,0,1,2,1,2,1,1,1,1,1,1,1,1),
  (0,0,0,0,0,0,0,0,1,1,0,0,0,2,2,2,2,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1)),
 ((1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,0,1,1,1,1,1,1,1),
  (0,0,1,1,1,1,1,1,0,0,0,1,1,0,1,0,3,0,3,0,1,1,1,1,1),
  (1,1,1,2,2,0,0,1,1,1,0,0,1,0,1,0,0,3,0,0,0,1,1,1,1),
  (0,1,2,2,2,0,0,0,0,1,1,0,0,0,1,1,0,3,0,3,0,1,1,1,1),
  (1,1,2,0,0,1,0,5,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1),
  (1,1,1,0,2,1,3,0,3,0,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1),
  (1,1,1,0,1,1,0,3,0,3,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0),
  (0,7,0,0,0,1,3,0,3,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1),
  (1,1,1,1,0,1,0,0,0,0,0,1,1,0,1,1,1,1,0,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,8,0,7,0,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,0,2,2,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,2,2,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,2,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1)),
 ((1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,0,0,1,1,1,1,2,0,0,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,0,0,0,5,0,1,2,0,0,1,0,2,0,2,1,1,1,1,1),
  (1,1,1,1,0,1,0,3,3,3,0,1,1,0,1,0,0,0,0,0,0,0,0,0,0),
  (1,1,1,1,0,1,0,3,0,0,0,0,0,0,0,0,0,0,1,0,1,1,1,1,1),
  (0,0,0,0,0,0,0,0,0,3,0,1,1,0,0,1,2,2,2,2,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,3,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,3,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)),
 ((1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,2,2,0,0,0,0,0,1,0,1,1,1,0,0,0,1,1,1,1,1),
  (1,1,1,1,1,2,2,0,5,0,3,0,3,0,0,1,0,2,3,2,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,3,0,3,0,0,0,0,0),
  (1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,2,3,2,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,3,0,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1),
  (0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)),

 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,0,0,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,0,0,0,0,3,0,1,0,0,0,0,0,0,1,1,1,1,1),
  (1,1,1,1,1,1,1,3,1,1,0,0,3,0,0,1,1,1,1,0,0,0,1,1,1),
  (1,1,1,1,1,1,1,0,1,1,1,0,1,1,1,1,0,0,1,1,1,0,1,1,1),
  (1,1,1,1,1,1,1,0,1,2,2,6,2,1,1,1,3,0,0,0,1,0,1,1,1),
  (1,1,1,1,1,1,1,0,1,2,2,2,2,0,3,0,0,0,1,0,1,0,0,7,0),
  (1,1,1,1,1,1,1,0,3,2,2,2,2,1,0,1,0,0,0,0,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,0),
  (0,0,0,0,0,7,0,0,0,0,3,0,0,0,0,1,0,0,0,0,0,0,1,1,1),
  (1,1,1,1,0,1,1,1,0,3,0,0,3,1,1,1,0,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,0,3,3,0,1,0,0,0,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,0,0,1,0,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1)),
 ((1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1),
  (0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1),
  (1,0,0,0,8,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,1,0,1,0,0,1,1,0,0,0,1,1,1,1,1,1),
  (1,0,0,0,0,0,0,0,0,1,0,1,0,3,0,0,3,0,0,0,0,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,0,1,0,0,3,1,0,3,3,0,0,1,1,1,1),
  (1,0,1,0,0,0,0,0,0,1,0,1,0,3,0,1,3,0,0,1,1,1,1,1,1),
  (1,0,1,0,1,1,1,1,1,2,0,1,1,1,0,1,0,3,0,1,1,1,1,1,1),
  (0,0,1,0,0,0,0,0,1,2,2,0,0,1,0,1,0,3,0,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,1,1,2,2,0,0,0,0,0,3,3,0,1,1,1,1,1,1),
  (0,0,1,0,0,0,0,1,2,2,2,0,3,1,1,1,0,0,0,0,7,0,0,0,0),
  (1,0,1,0,1,1,1,1,2,2,2,2,0,1,0,0,1,0,1,1,1,1,1,1,1),
  (1,0,1,0,0,0,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1)),
 ((1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,2,1,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,2,0,0,3,0,0,1,1),
  (1,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,0,0,1,1,1,1,0,1,1),
  (0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,3,1,0,0,0,0,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1,3,1,1),
  (0,0,7,6,0,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,1,0,1,1),
  (1,1,1,1,0,0,0,1,1,1,0,1,1,1,0,0,0,0,0,0,0,0,0,1,1),
  (1,1,1,1,1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,0,3,2,2,0),
  (1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1,1),
  (1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,1,0,0),
  (1,1,1,1,1,1,1,1,0,0,3,0,0,1,1,1,1,1,1,1,1,0,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,2,0,1,1,1,1,1,1,1,1,1,0,0,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1)),
 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1),
  (1,1,1,1,1,1,1,1,1,0,0,2,2,2,1,1,1,1,1,1,1,1,0,1,1),
  (1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1),
  (1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,0,0,1,1),
  (1,1,1,1,1,1,1,1,1,0,0,0,0,2,2,2,2,2,1,1,1,0,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,5,0,1,1,1,0,0,0,1,1,1,0,1,0,0),
  (1,1,1,1,1,1,0,0,1,1,1,0,0,0,1,1,1,1,1,1,1,0,1,0,1),
  (1,1,1,1,1,1,0,3,3,0,0,0,0,0,1,1,1,1,1,1,1,0,1,0,1),
  (0,0,0,0,0,0,0,0,0,0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1),
  (1,1,1,1,1,1,1,0,0,0,1,1,0,1,1,1,1,1,1,1,1,0,1,0,1),
  (1,1,1,1,1,1,1,0,1,1,0,0,3,0,1,1,1,1,1,0,0,0,1,0,1),
  (1,1,1,1,1,1,1,0,1,1,0,0,0,3,0,1,1,1,1,0,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,1,1,0,3,3,0,0,1,1,1,1,0,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,1,1,1,0,0,3,0,1,1,1,1,0,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,1,1,1,0,0,0,1,1,1,1,1,0,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1)),
 ((1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0),
  (1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1),
  (1,1,1,0,5,0,0,0,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1),
  (1,1,1,0,0,3,0,3,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1),
  (1,1,1,0,3,0,3,0,3,0,0,1,1,1,1,1,1,1,1,0,1,1,1,0,1),
  (0,0,1,1,1,0,0,0,0,0,0,1,1,1,1,0,0,0,1,0,1,1,1,0,1),
  (1,0,0,0,0,3,1,0,1,1,1,1,1,1,1,0,3,0,1,0,1,1,1,0,1),
  (1,1,0,1,1,0,0,0,2,2,2,2,2,2,2,2,3,2,1,0,1,1,1,0,1),
  (1,1,0,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1),
  (1,1,0,1,1,1,1,1,1,1,1,0,0,0,0,7,0,0,0,0,1,1,1,0,1),
  (1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1)),
 ((1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,0,1,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,0,1,1,1,0,1),
  (1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,0,1),
  (1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,2,2,2,1,0,1,1,1,0,1),
  (1,1,0,1,1,1,1,1,1,1,1,0,1,0,1,2,2,2,1,0,0,0,0,0,1),
  (1,1,0,1,1,1,1,1,1,1,1,0,1,1,1,1,2,0,1,1,1,1,1,1,1),
  (1,1,0,1,1,1,1,1,1,1,1,0,0,0,8,1,0,0,1,1,1,1,1,1,1),
  (0,0,0,1,1,1,1,1,1,1,1,7,1,1,1,1,0,0,0,0,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,3,0,0,1,0,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,3,0,0,1,0,0,7,0,0,0),
  (1,1,1,1,1,1,1,1,1,1,0,3,3,0,3,1,1,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,0,3,0,0,3,0,1,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)),

 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,2,2,2,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,2,2,2,1,0,3,3,1,1,0,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,2,2,1,0,0,0,0,0,3,0,1,1,1,1,1,1,1),
  (0,0,0,0,0,7,0,0,0,0,1,0,1,1,1,0,0,0,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,0,0,1,1,0,3,0,0,3,1,1,1,1,1,1,1,1,1),
  (0,0,0,0,0,1,1,1,0,0,0,3,0,3,3,0,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,0,0,0,1,2,0,1,3,0,0,3,0,0,0,0,0,0,0,7,0,0),
  (1,1,1,1,1,1,0,1,2,1,1,0,0,3,0,0,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,0,1,1,1,1,0,3,0,3,0,0,1,0,0,0,0,0,0,0),
  (1,1,1,1,1,1,0,0,0,0,1,1,1,0,1,1,0,1,0,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,0,0,1,0,0,0,0,1,0,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1)),
 ((1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,1,1,1,1,1),
  (1,1,1,1,0,0,0,0,0,0,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1),
  (1,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1),
  (1,1,1,1,0,1,2,2,2,1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1),
  (1,1,1,1,0,0,2,2,2,0,0,1,1,1,0,0,1,1,0,1,1,1,1,1,1),
  (1,1,1,1,0,1,2,2,2,1,0,1,0,0,0,0,0,0,0,0,0,1,1,1,1),
  (1,1,1,1,0,1,1,0,1,1,0,1,0,0,3,0,0,1,3,0,0,0,7,0,0),
  (1,1,1,1,0,0,0,0,0,0,3,1,1,0,1,1,1,1,0,0,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,3,1,0,0,1,0,1,1,1,1,1,0,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,3,0,0,0,0,3,0,1,1,1,1,0,1,1,1,1,1),
  (1,1,1,1,1,1,1,0,0,0,1,1,1,0,3,1,1,0,3,0,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,0,0,3,0,0,0,0,0,0,1,1,1,1,1),
  (0,7,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,1,0,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,0,0),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1)),

 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,8,1,0,0),
  (1,1,1,1,1,0,0,0,7,0,0,0,3,0,0,0,0,0,0,3,0,0,1,1,1),
  (1,1,1,1,1,0,1,1,1,1,1,1,0,0,0,1,1,0,1,1,0,0,0,1,1),
  (1,1,1,1,1,0,1,2,2,2,1,1,3,1,3,3,0,3,0,3,3,1,0,1,1),
  (1,1,1,1,1,0,1,2,2,2,0,0,0,1,0,0,0,0,0,0,0,1,0,1,1),
  (1,1,1,1,1,0,1,2,2,2,0,0,0,3,3,1,1,1,0,1,3,0,0,1,1),
  (1,1,1,1,1,0,1,2,2,2,0,1,1,0,3,0,0,3,3,0,0,3,0,7,0),
  (0,0,0,0,0,0,1,2,2,2,2,1,1,0,0,0,0,0,0,0,3,1,1,1,1),
  (1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,0,0,0),
  (0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,1,1),
  (1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,1),
  (1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1)),
 ((1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,1,1,1,0,0,0,0,1,0,0,0,0,0,0,0,1),
  (1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,0,1),
  (1,0,1,1,1,1,1,2,2,2,1,1,0,0,0,0,0,1,0,0,0,0,0,0,1),
  (1,0,1,1,1,1,1,2,2,2,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1),
  (0,0,1,1,1,1,1,2,2,0,0,0,0,0,0,0,0,1,0,0,8,1,7,0,0),
  (1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,2,1,1,1,1,1,0,1,1),
  (1,0,1,1,1,1,1,0,3,0,1,1,1,1,1,0,2,3,0,1,1,1,0,1,1),
  (1,0,1,1,1,1,0,0,3,0,0,0,1,0,3,3,0,0,0,0,0,0,0,1,1),
  (1,0,1,1,1,0,0,1,0,3,3,0,1,0,3,0,3,1,1,0,1,1,1,1,1),
  (1,0,1,1,1,0,0,3,0,1,0,0,1,0,0,3,0,0,2,2,2,1,1,1,1),
  (1,0,1,1,1,0,3,3,3,0,0,1,1,1,0,0,0,0,1,0,2,1,1,1,1),
  (1,0,0,7,0,0,3,0,0,1,1,1,1,1,1,2,3,0,1,0,0,1,1,1,1),
  (1,0,1,1,1,0,0,1,0,0,0,0,0,0,0,2,1,7,1,3,3,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,2,0,0,0,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)),
 ((1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,0,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (0,0,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,2,1,1,1,1,1,1),
  (1,1,1,1,1,0,3,0,0,3,0,0,0,0,0,3,1,1,2,0,0,0,0,0,0),
  (1,1,1,1,0,0,3,1,0,3,0,0,1,1,0,0,1,1,2,1,1,1,1,1,1),
  (1,1,1,1,0,3,3,0,3,3,0,0,1,0,3,0,2,1,2,1,0,0,1,1,1),
  (1,1,1,1,0,0,0,0,0,1,1,1,1,0,0,3,2,1,0,0,0,0,1,1,1),
  (1,1,1,1,1,1,0,1,1,1,1,1,1,2,1,2,1,1,0,0,0,0,1,1,1),
  (1,1,1,1,1,1,0,0,0,1,1,1,1,2,1,0,1,0,0,0,0,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,1,1,2,1,0,1,0,0,0,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,1,1,2,1,0,1,1,0,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,1,1,2,0,0,0,3,0,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,0,0,1,0,0,0,0,0),
  (1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1)),
 ((1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,7,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,1,1,1,1,1),
  (1,1,7,1,1,1,1,1,1,1,0,0,0,3,0,0,1,3,0,3,1,1,1,1,1),
  (1,1,0,1,1,1,2,2,1,1,1,0,1,1,0,0,0,0,0,0,3,0,0,1,1),
  (0,0,0,1,2,2,2,0,0,0,0,0,0,1,0,0,1,0,3,0,0,0,0,1,1),
  (1,1,1,1,2,0,0,3,1,0,1,1,0,1,0,0,1,1,0,3,1,3,0,0,0),
  (1,1,1,1,2,2,0,0,1,0,3,0,0,0,0,3,1,1,1,0,0,3,0,1,1),
  (1,1,1,2,2,2,1,1,1,1,1,1,1,0,0,0,1,1,1,1,0,0,0,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)),

 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,2,2,2,1,0,1,0,3,3,0,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,2,2,2,1,0,1,0,0,0,0,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,2,2,2,0,3,0,3,0,3,0,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,2,2,0,1,1,1,0,0,3,0,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,3,1,1,1,1,1,0,1,1,1,1,1,1,1,0,1),
  (0,0,0,0,0,0,7,0,0,0,1,1,1,0,0,3,0,0,1,1,1,0,0,0,1),
  (1,1,1,1,1,1,1,0,0,0,0,0,0,3,0,0,0,0,1,1,1,0,1,0,1),
  (0,0,0,0,0,0,1,0,3,3,0,1,1,1,0,1,1,1,1,1,1,0,1,0,1),
  (1,1,1,1,1,0,1,1,0,0,0,1,1,1,0,1,1,1,1,1,1,0,1,0,1),
  (1,1,1,1,1,0,0,1,1,1,1,1,1,1,0,1,0,0,0,0,0,0,1,0,1),
  (1,1,1,1,1,1,0,0,0,0,0,0,0,1,0,1,0,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,0,1)),
 ((1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,1,0,1,0,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,0,0,7,0,0,1,0,1,0,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,8,1,0,0,0,0,1,0,1,1,0,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,0,1,1,0,1,7,1,1,0,0,0,0,1,1,0,1),
  (0,0,7,0,0,0,0,0,3,0,0,3,0,0,0,1,1,1,1,1,0,1,1,0,1),
  (1,1,1,1,1,1,0,1,0,3,0,0,3,0,0,1,0,0,0,1,0,1,1,0,1),
  (1,1,1,1,1,1,0,0,3,0,0,1,1,1,1,1,0,3,0,1,0,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,0,1,1,0,1,0,1,1,0,0,1,0,0,1,0,1),
  (1,1,1,1,1,1,1,1,0,0,1,1,0,1,0,1,1,1,0,1,1,0,1,0,1),
  (1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,3,0,0,0,1,0,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,0,0,1),
  (0,0,0,0,0,0,0,2,2,2,2,2,2,2,0,0,0,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1)),
 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,1,0,1),
  (0,0,0,0,0,0,0,0,0,0,1,0,0,3,0,1,1,1,0,1,1,0,1,1,1),
  (1,0,0,0,0,0,0,0,0,0,1,0,0,3,3,0,0,0,0,0,3,3,0,1,1),
  (1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,1,0,1,1,0,3,0,0,1,1),
  (1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,3,0,3,0,1,0,1,1),
  (1,0,0,0,1,1,1,1,1,1,1,0,1,1,0,1,0,0,3,0,0,3,0,1,1),
  (1,1,1,1,1,0,0,0,0,1,1,0,1,1,0,0,0,3,1,0,1,0,0,1,1),
  (0,0,0,0,1,0,1,1,0,1,1,0,1,1,1,1,0,0,1,0,1,1,1,1,1),
  (1,1,1,0,0,0,0,0,0,0,0,0,1,0,0,1,1,3,0,3,0,0,1,1,1),
  (0,0,1,1,1,1,1,1,0,1,1,0,1,0,0,0,0,0,3,0,3,0,1,1,1),
  (1,0,0,0,0,2,2,2,2,0,0,0,1,0,0,1,1,1,0,1,1,0,1,1,1),
  (1,1,1,1,1,2,2,2,2,0,1,1,0,0,0,1,1,1,0,1,0,0,0,1,1),
  (1,1,1,1,1,2,2,2,2,2,0,0,0,0,0,0,0,1,3,3,0,0,0,1,1),
  (1,1,1,1,1,2,2,2,2,1,1,1,1,1,1,0,0,0,0,1,0,0,0,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1)),
 ((1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,0,1,1,1),
  (1,1,1,1,1,1,1,1,0,0,0,0,3,0,0,1,1,1,1,1,1,0,1,1,1),
  (0,0,0,0,7,0,0,0,0,3,0,3,3,0,1,1,1,1,1,1,1,0,1,1,1),
  (1,1,1,1,1,1,1,1,1,0,3,1,0,3,1,1,2,2,2,2,1,0,0,1,1),
  (1,1,1,1,1,1,1,1,1,3,0,0,0,3,0,2,2,1,2,4,1,1,0,1,1),
  (1,1,1,1,1,1,1,1,1,0,3,3,3,0,1,2,2,4,2,4,2,1,0,1,1),
  (1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,0,1,0,1,1),
  (1,1,1,1,1,2,2,1,1,1,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1),
  (1,1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,0,0,0,0,0,1,0,1,1),
  (1,1,1,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,1,0,1,1),
  (1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,0,1,1),
  (1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1),
  (1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1)),
 ((1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1),
  (1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,1,8,8,8,1,0,1),
  (1,0,1,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,1,8,8,8,1,0,1),
  (1,0,1,0,1,1,1,0,1,1,1,1,1,0,0,0,0,0,1,8,8,8,1,0,1),
  (1,0,1,0,1,1,0,0,1,0,0,0,1,1,1,1,1,0,1,1,0,1,1,0,1),
  (0,0,1,0,1,1,0,1,0,0,3,3,1,2,2,2,1,0,1,1,0,1,0,0,1),
  (1,0,1,0,0,0,0,1,0,0,3,0,0,0,0,2,1,0,0,1,0,1,0,1,1),
  (1,0,1,0,1,1,1,1,0,3,0,0,1,0,0,2,1,0,1,1,0,1,0,1,1),
  (1,0,1,0,1,1,0,0,3,3,3,0,1,2,2,2,1,0,0,1,0,1,0,1,1),
  (1,0,1,0,1,1,0,3,0,0,1,1,1,2,2,1,1,0,1,1,0,1,0,1,1),
  (1,0,1,0,1,1,1,0,3,0,1,1,1,0,1,1,0,0,0,1,0,1,0,1,1),
  (1,0,1,0,1,1,1,0,0,3,1,0,0,0,0,1,0,1,1,1,0,1,0,1,1),
  (1,0,1,0,0,0,1,1,1,0,1,0,0,0,0,1,0,0,0,1,0,1,0,1,1),
  (1,1,1,0,1,0,0,0,1,0,1,0,0,0,0,1,1,1,1,1,7,1,0,1,1),
  (0,0,1,0,1,1,1,0,1,0,1,0,0,1,0,0,0,0,0,0,0,1,0,1,1),
  (1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)),
 ((1,0,1,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,0,1,0,1,1,1,1,1,0,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1),
  (1,0,1,0,1,1,1,1,1,0,1,1,0,3,3,0,1,1,1,1,1,1,1,1,1),
  (1,0,1,7,1,1,1,1,1,7,1,1,0,0,3,0,1,1,1,1,1,1,1,1,1),
  (1,0,1,0,1,1,1,1,1,0,1,1,1,0,3,0,1,1,0,0,0,1,1,1,1),
  (1,0,1,0,1,1,1,1,0,0,1,1,1,0,1,1,0,0,0,1,3,0,1,1,1),
  (1,0,1,0,1,1,1,1,0,0,0,0,0,0,0,0,0,3,3,0,3,0,1,1,1),
  (1,0,1,0,0,0,0,0,0,1,1,1,1,0,1,0,3,0,0,0,0,0,1,1,1),
  (1,0,1,1,1,1,1,1,0,3,0,0,1,0,1,0,3,3,3,0,0,1,1,1,1),
  (1,0,1,1,1,1,1,1,0,1,1,0,1,0,1,0,0,0,0,0,1,1,1,1,1),
  (0,0,1,1,1,1,1,1,2,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,2,0,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,2,2,2,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,2,2,2,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1),
  (1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1)));
const MapData:array[1..MaxMaps,1..6] of byte=
(( 0, 0, 7, 2,  24, 7),
 ( 0, 1, 8, 3,   9,15),
 ( 0, 2, 9, 4,  12,15),
 ( 0, 3,10, 5,  10,15),
 ( 0, 4,11, 6,  12,15),
 ( 0, 5,12, 0,  24,10),

 ( 1, 0,13, 8,  24, 6),
 ( 2, 7,14, 9,  24,12),
 ( 3, 8,15,10,   7,15),
 ( 4, 9,16,11,  12,15),
 ( 5,10,17,12,   0, 5),
 ( 6,11,18, 0,  24,11),

 ( 7, 0,19,14,  24, 9),
 ( 8,13,20,15,   0, 5),
 ( 9,14,21,16,   0,11),
 (10,15,22,17,  13,15),
 (11,16,23,18,   9,15),
 (12,17,24, 0,   7,11),

 (13, 0,25,20,  24, 6),
 (14,19,26,21,  24,12),
 (15,20,27,22,   0, 7),
 (16,21,28,23,   0, 8),
 (17,22,29,24,   7, 0),
 (18,23,30, 0,  11, 0),

 (19, 0,31,26,  24, 9),
 (20,25,32,27,   0,12),
 (21,26,33,28,   0, 9),
 (22,27,34,29,   9,15),
 (23,28,35,30,   8,15),
 (24,29,36, 0,   0, 9),

 (25, 0, 0,32,  14,15),
 (26,31, 0,33,   0, 6),
 (27,32, 0,34,   0, 8),
 (28,33, 0,35,   0, 5),
 (29,34, 0,36,   9,15),
 (30,35, 0, 0,   3, 0));
begin
{for k:=1 to MaxMaps do begin
  startmap^[k].nDemo:=0;
  for j:=1 to MaxDemoSize do startmap^[k].demo[j]:=0;
end;}
{loadStartMap;
{for k:=1 to MaxMaps do begin
 StartMap^[k].M:=Oldmapi[k].M;
 startmap^[k].defaultStart.x:=MapData[k,5];
 startmap^[k].defaultStart.y:=MapData[k,6];
 startmap^[k].neighbour[1]:=MapData[k,1];
 startmap^[k].neighbour[2]:=MapData[k,2];
 startmap^[k].neighbour[3]:=MapData[k,3];
 startmap^[k].neighbour[4]:=MapData[k,4];

 for i:=0 to 500 do StartMap^[k].demo[i]:=oldMapi[k].demo[i];
 StartMap^[k].ndemo:=oldMapi[k].ndemo
end;}
{ k:=30;
 for i:=0 to 15 do
   for j:=0 to 24 do startMap^[k].m[j,i]:=map1[k,i,j];
 startmap^[k].defaultStart.x:=MapData[k,5];
 startmap^[k].defaultStart.y:=MapData[k,6];
SaveStartMap;
end;
{-----------------------------------------------------------------------}
procedure Player.startNewMap(setToDefault:boolean);
begin
Nmov:=0;
rec:=true;
if setToDefault then begin
  defaultStart:=true;
  x:=map^[currentMap].defaultStart.x;
  y:=map^[currentMap].defaultStart.y;
end;
m.Startx:=x;
m.startY:=y;
if map^[currentMap].nDemo>1 then drawDemoPrompt else clearDemoPrompt;
tempMap:=map^[currentMap].m;

if currentMap<=36 then
  DrawKurtanMap((currentMap-1) div 6,(currentMap-1) mod 6)
else drawKurtanMap(255,0);
{*show Palyer Location*}

for i:=0 to 15 do
  for j:=0 to 24 do R[j,i]:=1;
end;
{-----------------------------------------------------------------------}
procedure DrawMap;
begin
 if R[m.x,m.y]>0 then begin
   R[m.x,m.y]:=0;
   drawBlock(m.x,m.y,9);
 end;

 for i:=0 to 15 do
   for j:=0 to 24 do if R[j,i]>0 then begin
     R[j,i]:=0;
     drawBlock(j,i,map^[m.CurrentMap].M[j,i])
   end;
end;
{----------------------------------------------------------------------}
procedure player.moveMe(dx,dy:shortint);
var nx,ny:shortInt;
    tile,tile1,push:byte;
    flg:boolean;
begin
 nx:=x+dx;
 ny:=y+dy;
 if (nx>=0) and (ny>=0) and (nx<=24) and (ny<=15) then begin
   tile:=map^[currentMap].m[nx,ny];
   if (tile=7) or (tile=8) then begin
     map^[currentMap].m[nx,ny]:=0;
     R[nx,ny]:=1;
     tile:=0
   end;
   flg:=false;
   if (tile=0) or (tile=2) then flg:=true else
   if (tile>=3) and (tile<=6) and
      (nx+dx>=0) and (ny+dy>=0) and (nx+dx<=24) and (ny+dy<=15) then begin
         push:=tile;
         if tile=4 then push:=3 else
         if tile=6 then push:=5;


         tile1:=map^[currentMap].m[nx+dx,ny+dy];
         if (tile1=0) or (tile1=2) then begin
              flg:=true;
              R[nx+dx,ny+dy]:=1;
              if (tile=3) or (tile=5) then Map^[currentMap].m[nx,ny]:=0 else
                                           Map^[currentMap].m[nx,ny]:=2;
              if tile1=0 then Map^[currentMap].m[nx+dx,ny+dy]:=push else
                              Map^[currentMap].m[nx+dx,ny+dy]:=push+1
         end;
   end;
   if flg=true then begin
     if (Nmov<MaxUndo*4) and (rec=true) then begin
       inc(Nmov);
       if dx=-1 then base:=0 else
       if dx=+1 then base:=1 else
       if dy=-1 then base:=2 else
                     base:=3;
       shift:=(Nmov-1) mod 4;
       adress:=(Nmov-1) div 4;
       if shift=0 then moves[adress]:=base else moves[adress]:=moves[adress] or (base shl (2*shift));
     end;
     R[x,y]:=1;
     x:=nx;
     y:=ny;
     R[x,y]:=1
   end
 end
 else begin
   if nx<0 then begin
     x:=24;
     currentMap:=map^[currentMap].neighbour[1];
   end else
   if nx>24 then begin
     x:=0;
     currentMap:=map^[currentMap].neighbour[3];
   end else
   if ny<0 then begin
     y:=15;
     currentMap:=map^[currentMap].neighbour[2];
   end else
   if ny>15 then begin
     y:=0;
     currentMap:=map^[currentMap].neighbour[4];
   end;
   StartNewMap(false);
 end;
end;
{----------------------------------------------------------------------}
procedure player.control;
var demoSpeed:byte;
begin
 key:='|';
 Rkey;
 if key=#0 then
  case key1 of
     #72:MoveMe(0 ,-1);
     #75:MoveMe(-1,0);
     #77:MoveMe(+1,0);
     #80:MoveMe(0 ,+1);
{alt-s}
     #31:if (Nmov<MaxDemoSize*4) and (defaultStart) then begin
           Startmap^[currentMap].nDemo:=Nmov;
           for j:=0 to Nmov div 4+1 do StartMap^[currentMap].Demo[j]:=moves[j];
           map^[currentMap].demo:=StartMap^[currentMap].Demo;
           map^[currentMap].nDemo:=Nmov;
           saveStartMap;
           drawDemoPrompt
         end;
     #59:begin{restart}
           Map^[currentMap].m:=StartMap^[currentMap].m;
           StartNewMap(true);
         end;
     #63:if map^[currentMap].nDemo>1 then begin{demo}
           DrawDemoOptions;
           Map^[currentMap].m:=StartMap^[currentMap].m;
           startNewMap(true);

           rec:=false;
           demoSpeed:=3;

           for k:=0 to map^[currentMap].nDemo-1 do begin

             base:=mem[0:$46c];
             repeat
               key:='|';
               keyP;
               case key of
                 '+':if demoSpeed>0 then dec(demoSpeed);
                 '-':if demoSpeed<30 then inc(demoSpeed);
                 #27:if key1=#1 then begin
                        clearDemoOptions;
                        exit
                     end
               end
             until abs(mem[0:$46c]-base)>=DemoSpeed;


             shift:=2*(k mod 4);
             adress:=k div 4;
             base:=3 shl shift;
             base:=map^[currentMap].Demo[adress] and base;
             base:=base shr shift;

             case base of
               0:moveMe(-1, 0);
               1:moveMe(+1, 0);
               2:moveMe( 0,-1);
               else moveMe( 0,+1)
             end;

             drawMap
           end;
           clearDemoOptions
         end
  end
 else
  case key of
   {bkSpace=undo}
   #8:if (Nmov>1) and (rec=true) then begin

           Map^[currentMap].m:=tempMap;
           x:=startx;
           y:=starty;
           rec:=false;
           for i:=0 to 15 do
             for j:=0 to 24 do R[j,i]:=1;

            dec(Nmov);
            for k:=0 to Nmov-1 do begin

             shift:=2*(k mod 4);
             adress:=k div 4;
             base:=3 shl shift;
             base:=Moves[adress] and base;
             base:=base shr shift;

             case base of
               0:moveMe(-1, 0);
               1:moveMe(+1, 0);
               2:moveMe( 0,-1);
               else moveMe( 0,+1)
             end

            end;
            {re-shiffr}
            shift:=(Nmov-1) mod 4;
            adress:=(Nmov-1) div 4;
            if shift=0 then moves[adress]:=moves[adress] and 3 else
            if shift=1 then moves[adress]:=moves[adress] and 3+moves[adress] and (3 shl 2) else
            if shift=2 then moves[adress]:=moves[adress] and 3+moves[adress] and (3 shl 2)+moves[adress] and (3 shl 4);
           rec:=true
     end;
     {go to a map}
     'g','G':begin
           str2:='  ';
           Rkey;
           key:=UpCase(key);
           if key in ['0'..'9'] then begin
             str2[1]:=key;
             Rkey;
             if key in ['0'..'9'] then begin
               str2[2]:=key;
               val(str2,j,k);
               if (j<=MaxMaps) and (j>0) then begin
                 CurrentMap:=j;
                 startNewMap(true)
               end else exit
             end else exit
           end else begin
             if key in ['A'..'Z'] then begin
               case key of
                  'A':j:=0;
                  'B':j:=6;
                  'C':j:=12;
                  'D':j:=18;
                  'E':j:=24;
                 else j:=30
               end;
               rkey;
               if key in ['1'..'6'] then begin
                 val(key,k,i);
                 currentMap:=j+k;
                 startNewMap(true)
               end
               else exit
             end
           end
         end
  end
end;


BEGIN
init13h;
new(map);
new(Startmap);
assign(f1,'Kurtan1.map');

{loadMaps;}
loadStartMap;

m.currentMap:=18;
m.StartNewMap(true);
drawHelp;
repeat
  DrawMap;
  m.control;
until key1=#68;

dispose(Startmap);
dispose(map);
restoreMode
END.
